name: Docker Image (CI) CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

concurrency:
  group: docker-cd-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-backend:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - name: Run test
        run: echo TODO Без тестов живём 🫠🫠🫠

  test-frontend:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - name: Run test
        run: echo TODO и тут без них 🫠🫠🫠

  build-publish:
    needs: [test-backend, test-frontend]
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        component: [backend, frontend]
        include:
          - component: backend
            image_name: andreyegor/fit-quest-backend
            context: backend
          - component: frontend
            image_name: andreyegor/fit-quest-frontend
            context: frontend
    steps:
      - uses: actions/checkout@v4
      - name: Set Docker tag
        run: echo "IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.component }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-${{ matrix.component }}-
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: Docker build & push
        run: |
          docker buildx build \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache-new \
            -t ${{ matrix.image_name }}:${IMAGE_TAG} \
            -t ${{ matrix.image_name }}:latest \
            --push \
            ${{ matrix.context }}
      - name: Move updated cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  #Deploy
  deploy:
    needs: build-publish
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/fit-quest-deploy
            git pull
            docker-compose stop
            docker-compose pull
            docker-compose up -d --remove-orphans --force-recreate
            docker image prune -af