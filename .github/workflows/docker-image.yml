name: Docker Image (CI) CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

concurrency:
  group: docker-cd-${{ github.ref }}
  cancel-in-progress: true

jobs:
  #Backend
  test-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Run test
        run: echo TODO Без тестов живём 🫠🫠🫠

  build-publish-backend:
    needs: test-backend
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set Docker tag
        run: echo "IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV
      - name: Docker build backend
        run: docker build -t andreyegor/fit-quest-backend:${IMAGE_TAG} -t andreyegor/fit-quest-backend:latest backend
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: Docker push backend
        run: |
          docker push andreyegor/fit-quest-backend:${IMAGE_TAG}
          docker push andreyegor/fit-quest-backend:latest

  #Frontend
  test-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Run test
        run: echo TODO и тут без них 🫠🫠🫠

  build-publish-frontend:
    needs: test-frontend
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set Docker tag
        run: echo "IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV
      - name: Docker build frontend
        run: docker build -t andreyegor/fit-quest-frontend:${IMAGE_TAG} -t andreyegor/fit-quest-frontend:latest frontend
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: Docker push frontend
        run: |
          docker push andreyegor/fit-quest-frontend:${IMAGE_TAG}
          docker push andreyegor/fit-quest-frontend:latest

  #Deploy
  deploy:
    needs: [build-publish-backend, build-publish-frontend]
    runs-on: ubuntu-latest
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/fit-quest-deploy
            git pull
            docker-compose down --remove-orphans
            docker image prune -af
            docker-compose pull
            docker-compose up -d --force-recreate
