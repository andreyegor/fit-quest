name: Docker Image (CI) CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: docker-cd-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-backend:
    runs-on: ubuntu-latest
    steps:
    - name: Run test
      run: echo TODO Без тестов живём 🫠🫠🫠

  #Backend
  build-publish-backend:
    needs: test-backend
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set Docker tag
      run: echo "IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV
    - name: Docker build backend
      run: docker build -t andreyegor/backend:${IMAGE_TAG} -t andreyegor/backend:latest backend
    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
    - name: Docker push backend
      run: | 
        docker push andreyegor/backend:${IMAGE_TAG}
        docker push andreyegor/backend:latest

  #Frontend
  #TODO test build publish

  #Deploy
  deploy:
    needs: build-publish-backend
    runs-on: ubuntu-latest
    steps:
    - name: Test SSH connection
      uses: appleboy/ssh-action@v1.2.2
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: echo "SSH connection successful"
    - name: Deploy via SSH
      uses: appleboy/ssh-action@v1.2.2
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd ~/fit-quest-deploy
          git pull
          docker-compose pull
          docker-compose up -d
